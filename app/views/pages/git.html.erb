<!DOCTYPE html>
<html>
  <head>
    <title>Git | Ruby on Rails Project One</title> 
  </head>
  <body>
    <h1>Git</h1>
    <ol>
        <b><li>Inicialización de un repositorio de git nuevo en una aplicación existente</li></b>
          <p>git init</p>
        <b><li>Creación de un branch nuevo</li></b>
          <p>git checkout -b nombre-rama, que es lo mismo a git branch nombre-rama, la primera es un atajo, además de crearla, cambia a ella</p>
        <b><li>Realizar un commit incluyendo todos los cambios actuales</li></b>
          <p>git commit -am "mensaje", es un atajo de git commit -a -m "mensaje", y a su vez de git add -a, git commit -m "mensaje"</p>
        <b><li>Cómo enviar el código al repositorio remoto</li></b>
          <p>git push -u origin main/master, luego simplemente git push</p>
        <b><li>Cómo configurar el origen del repositorio remoto para evitar escribirlo siempre cada vez que se hace un push o un pull.</li></b>
          <p>Con el argumento -u se agrega una referencia que vincula la rama local con la remota</p>
        <b><li>Diferencia entre un reset y revert</li></b>
          <p>El reset se usa para revertir commits que no se han enviado al repo remoto, el revert deshace el último commit que ya esta en el repo remoto.</p>
        <b><li>Además de cambiar de ramas, para qué más se puede utilizar el comando git checkout</li></b>
          <p>Se puede utilizar también para cambiar entre commits, es decir, otras versiones del proyecto</p>
        <b><li>Como puede ver los commits que se han realizado en el proyecto</li></b>
          <p>git log</p>
        <b><li>He modificado dos archivos y quiero hacer un commit por cada uno de ellos, cómo lo puedo hacer?</li></b>
          <p>Se hace git add nombre-archivo1 y luego git commit -m "mensaje para archivo1", se repite el proceso con el archivo2</p>
    </ol>
   <p>Volver a <%= link_to 'Home', :action => :home %> o visita <%= link_to 'Basics', :action => :basics %>, <%= link_to 'Ruby', :action => :ruby %></p>
  </body>
</html>